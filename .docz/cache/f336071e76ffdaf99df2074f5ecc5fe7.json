{"remainingRequest":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/manjuladube/Documents/linaframework-docs/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/manjuladube/Documents/linaframework-docs/components/code.js","dependencies":[{"path":"/Users/manjuladube/Documents/linaframework-docs/components/code.js","mtime":1542312328000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/manjuladube/Documents/linaframework-docs/components/code.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport nightOwl from 'prism-react-renderer/themes/nightOwl';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { FaCopy } from 'react-icons/fa';\nimport { withState } from 'recompose';\n\nvar styles = function styles(style) {\n  return _objectSpread({}, style, {\n    padding: 20,\n    position: 'relative'\n  });\n};\n\nvar buttonStyles = {\n  border: 0,\n  padding: 0,\n  background: 'transparent',\n  position: 'absolute',\n  right: 20,\n  cursor: 'pointer'\n};\nvar enhance = withState('copied', 'setCopied', false);\n\nvar _default = enhance(function (_ref) {\n  var code = _ref.code,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? 'jsx' : _ref$language,\n      copied = _ref.copied,\n      setCopied = _ref.setCopied;\n  return React.createElement(Highlight, Object.assign({}, defaultProps, {\n    theme: nightOwl,\n    code: code.trim(),\n    language: language,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), function (_ref2) {\n    var className = _ref2.className,\n        style = _ref2.style,\n        tokens = _ref2.tokens,\n        getLineProps = _ref2.getLineProps,\n        getTokenProps = _ref2.getTokenProps;\n    return React.createElement(\"pre\", {\n      className: className,\n      style: styles(style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: code.trim(),\n      onCopy: function onCopy() {\n        return setCopied(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: buttonStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FaCopy, {\n      fill: copied ? '#72e872' : '#fff',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), tokens.map(function (line, i) {\n      return React.createElement(\"div\", Object.assign({}, getLineProps({\n        line: line,\n        key: i\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), line.map(function (token, key) {\n        return React.createElement(\"span\", Object.assign({}, getTokenProps({\n          token: token,\n          key: key\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }));\n    }));\n  });\n});\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(styles, \"styles\", \"/Users/manjuladube/Documents/linaframework-docs/components/code.js\");\n  reactHotLoader.register(buttonStyles, \"buttonStyles\", \"/Users/manjuladube/Documents/linaframework-docs/components/code.js\");\n  reactHotLoader.register(enhance, \"enhance\", \"/Users/manjuladube/Documents/linaframework-docs/components/code.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/manjuladube/Documents/linaframework-docs/components/code.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/manjuladube/Documents/linaframework-docs/components/code.js"],"names":["React","Highlight","defaultProps","nightOwl","CopyToClipboard","FaCopy","withState","styles","style","padding","position","buttonStyles","border","background","right","cursor","enhance","code","language","copied","setCopied","trim","className","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,2BACfA,KADe;AAElBC,IAAAA,OAAO,EAAE,EAFS;AAGlBC,IAAAA,QAAQ,EAAE;AAHQ;AAAA,CAApB;;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AAEnBH,EAAAA,OAAO,EAAE,CAFU;AAGnBI,EAAAA,UAAU,EAAE,aAHO;AAInBH,EAAAA,QAAQ,EAAE,UAJS;AAKnBI,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,MAAM,EAAE;AANW,CAArB;AASA,IAAMC,OAAO,GAAGV,SAAS,CAAC,QAAD,EAAW,WAAX,EAAwB,KAAxB,CAAzB;;eAEeU,OAAO,CAAC;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,2BAASC,QAAT;AAAA,MAASA,QAAT,8BAAoB,KAApB;AAAA,MAA2BC,MAA3B,QAA2BA,MAA3B;AAAA,MAAmCC,SAAnC,QAAmCA,SAAnC;AAAA,SACrB,oBAAC,SAAD,oBACMlB,YADN;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,IAAI,EAAEc,IAAI,CAACI,IAAL,EAHR;AAIE,IAAA,QAAQ,EAAEH,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG;AAAA,QAAGI,SAAH,SAAGA,SAAH;AAAA,QAAcd,KAAd,SAAcA,KAAd;AAAA,QAAqBe,MAArB,SAAqBA,MAArB;AAAA,QAA6BC,YAA7B,SAA6BA,YAA7B;AAAA,QAA2CC,aAA3C,SAA2CA,aAA3C;AAAA,WACC;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAA2B,MAAA,KAAK,EAAEf,MAAM,CAACC,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAES,IAAI,CAACI,IAAL,EAAvB;AAAoC,MAAA,MAAM,EAAE;AAAA,eAAMD,SAAS,CAAC,IAAD,CAAf;AAAA,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAET,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEQ,MAAM,GAAG,SAAH,GAAe,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAOGI,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,aACV,6CAASJ,YAAY,CAAC;AAAEG,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,GAAG,EAAED;AAAb,OAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;AAAA,eACR,8CAAUJ,aAAa,CAAC;AAAEK,UAAAA,KAAK,EAALA,KAAF;AAASD,UAAAA,GAAG,EAAHA;AAAT,SAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADQ;AAAA,OAAT,CADH,CADU;AAAA,KAAX,CAPH,CADD;AAAA,GANH,CADqB;AAAA,CAAD,C;;AAAtB;;;;;;;;;;;;0BAjBMtB,M;0BAMAI,Y;0BASAK,O","sourcesContent":["import React from 'react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport nightOwl from 'prism-react-renderer/themes/nightOwl'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { FaCopy } from 'react-icons/fa'\nimport { withState } from 'recompose'\n\nconst styles = style => ({\n  ...style,\n  padding: 20,\n  position: 'relative'\n})\n\nconst buttonStyles = {\n  border: 0,\n  padding: 0,\n  background: 'transparent',\n  position: 'absolute',\n  right: 20,\n  cursor: 'pointer'\n}\n\nconst enhance = withState('copied', 'setCopied', false)\n\nexport default enhance(({ code, language = 'jsx', copied, setCopied }) => (\n  <Highlight\n    {...defaultProps}\n    theme={nightOwl}\n    code={code.trim()}\n    language={language}\n  >\n    {({ className, style, tokens, getLineProps, getTokenProps }) => (\n      <pre className={className} style={styles(style)}>\n        <CopyToClipboard text={code.trim()} onCopy={() => setCopied(true)}>\n          <button style={buttonStyles}>\n            <FaCopy fill={copied ? '#72e872' : '#fff'} />\n          </button>\n        </CopyToClipboard>\n\n        {tokens.map((line, i) => (\n          <div {...getLineProps({ line, key: i })}>\n            {line.map((token, key) => (\n              <span {...getTokenProps({ token, key })} />\n            ))}\n          </div>\n        ))}\n      </pre>\n    )}\n  </Highlight>\n))\n"]}]}