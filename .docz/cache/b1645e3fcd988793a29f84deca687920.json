{"remainingRequest":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/manjuladube/Documents/linaframework-docs/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/manjuladube/Documents/linaframework-docs/docs/9-disable-like.mdx","dependencies":[{"path":"/Users/manjuladube/Documents/linaframework-docs/docs/9-disable-like.mdx","mtime":1542312328000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/manjuladube/Documents/linaframework-docs/docs/9-disable-like.mdx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport Code from '../components/code';\n\nvar _default = function _default(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"disable-like\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Disable Like\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"A small bug we have with our application right now is that we can like the same cat twice and that shouldn't be allowed. We can fix this by adding a disabled attribute to the button and attach it to a function that will run every time our render function runs.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"To do this let's attach the function and then create it:\"), React.createElement(Code, {\n    code: \"\\n<button\\n  className=\\\"heart-icon\\\"\\n  disabled={this.catInFavorites(currentCat)}\\n  onClick={() => this.favoriteCat(currentCat)}\\n>\\n  <GoHeart size=\\\"30\\\" color=\\\"#f44336\\\" />\\n</button>\\n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"As you can see we are not calling the function as a callback here and that is because in this case we do want it to run on page render and also on every update to make sure that we are disabling the button correctly.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"write-the-function\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Write the function\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"What we want to do is check if the current cat being shown in the big image is already in the array of \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"favoriteCats\"), \". If we think about it we want to disable the button when the array already contains that cat and leave it enabled when that is not happening. In ES6 we got a new function in the array method called exactly that:\"), React.createElement(Code, {\n    code: \"\\n  catInFavorites = cat => this.state.favoriteCats.includes(cat)\\n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"This function will return false when the cat as yet not been added and true when it has and that will make our button disabled \\uD83C\\uDF89\"));\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/manjuladube/Documents/linaframework-docs/docs/9-disable-like.mdx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/manjuladube/Documents/linaframework-docs/docs/9-disable-like.mdx"],"names":["React","MDXTag","Code","components","props"],"mappings":";;;;;;;;;;;;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;eAEa;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAiBC,KAAjB;;AAAA,SAA4B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAwB,IAAA,UAAU,EAAED,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD2C,EAE3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4QAF2C,EAG3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAH2C,EAI3C,oBAAC,IAAD;AAAM,IAAA,IAAI,oMAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ2C,EAa3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gOAb2C,EAc3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAd2C,EAe3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAAoJ,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,UAAU,EAAEA,UAAtC;AAAkD,IAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApJ,yNAf2C,EAgB3C,oBAAC,IAAD;AAAM,IAAA,IAAI,uEAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhB2C,EAmB3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mJAnB2C,CAA5B;AAAA,C;;AAAf","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Code from '../components/code'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"disable-like\"}}>{`Disable Like`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A small bug we have with our application right now is that we can like the same cat twice and that shouldn't be allowed. We can fix this by adding a disabled attribute to the button and attach it to a function that will run every time our render function runs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To do this let's attach the function and then create it:`}</MDXTag>\n<Code code={`\n<button\n  className=\"heart-icon\"\n  disabled={this.catInFavorites(currentCat)}\n  onClick={() => this.favoriteCat(currentCat)}\n>\n  <GoHeart size=\"30\" color=\"#f44336\" />\n</button>\n`}/>\n<MDXTag name=\"p\" components={components}>{`As you can see we are not calling the function as a callback here and that is because in this case we do want it to run on page render and also on every update to make sure that we are disabling the button correctly.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"write-the-function\"}}>{`Write the function`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we want to do is check if the current cat being shown in the big image is already in the array of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`favoriteCats`}</MDXTag>{`. If we think about it we want to disable the button when the array already contains that cat and leave it enabled when that is not happening. In ES6 we got a new function in the array method called exactly that:`}</MDXTag>\n<Code code={`\n  catInFavorites = cat => this.state.favoriteCats.includes(cat)\n`} />\n<MDXTag name=\"p\" components={components}>{`This function will return false when the cat as yet not been added and true when it has and that will make our button disabled ðŸŽ‰`}</MDXTag></MDXTag>\n  "]}]}