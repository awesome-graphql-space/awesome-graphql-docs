{"remainingRequest":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/manjuladube/Documents/linaframework-docs/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":true,\"compact\":true}!/Users/manjuladube/Documents/linaframework-docs/components/code.js","dependencies":[{"path":"/Users/manjuladube/Documents/linaframework-docs/components/code.js","mtime":1542312328000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/manjuladube/Documents/linaframework-docs/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import React from'react';import Highlight,{defaultProps}from'prism-react-renderer';import nightOwl from'prism-react-renderer/themes/nightOwl';import{CopyToClipboard}from'react-copy-to-clipboard';import{FaCopy}from'react-icons/fa';import{withState}from'recompose';var styles=function styles(style){return _objectSpread({},style,{padding:20,position:'relative'});};var buttonStyles={border:0,padding:0,background:'transparent',position:'absolute',right:20,cursor:'pointer'};var enhance=withState('copied','setCopied',false);export default enhance(function(_ref){var code=_ref.code,_ref$language=_ref.language,language=_ref$language===void 0?'jsx':_ref$language,copied=_ref.copied,setCopied=_ref.setCopied;return React.createElement(Highlight,Object.assign({},defaultProps,{theme:nightOwl,code:code.trim(),language:language}),function(_ref2){var className=_ref2.className,style=_ref2.style,tokens=_ref2.tokens,getLineProps=_ref2.getLineProps,getTokenProps=_ref2.getTokenProps;return React.createElement(\"pre\",{className:className,style:styles(style)},React.createElement(CopyToClipboard,{text:code.trim(),onCopy:function onCopy(){return setCopied(true);}},React.createElement(\"button\",{style:buttonStyles},React.createElement(FaCopy,{fill:copied?'#72e872':'#fff'}))),tokens.map(function(line,i){return React.createElement(\"div\",getLineProps({line:line,key:i}),line.map(function(token,key){return React.createElement(\"span\",getTokenProps({token:token,key:key}));}));}));});});",{"version":3,"sources":["/Users/manjuladube/Documents/linaframework-docs/components/code.js"],"names":["React","Highlight","defaultProps","nightOwl","CopyToClipboard","FaCopy","withState","styles","style","padding","position","buttonStyles","border","background","right","cursor","enhance","code","language","copied","setCopied","trim","className","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,EAAoBC,YAApB,KAAwC,sBAAxC,CACA,MAAOC,CAAAA,QAAP,KAAqB,sCAArB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,SAAT,KAA0B,WAA1B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,0BACfA,KADe,EAElBC,OAAO,CAAE,EAFS,CAGlBC,QAAQ,CAAE,UAHQ,IAApB,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,MAAM,CAAE,CADW,CAEnBH,OAAO,CAAE,CAFU,CAGnBI,UAAU,CAAE,aAHO,CAInBH,QAAQ,CAAE,UAJS,CAKnBI,KAAK,CAAE,EALY,CAMnBC,MAAM,CAAE,SANW,CAArB,CASA,GAAMC,CAAAA,OAAO,CAAGV,SAAS,CAAC,QAAD,CAAW,WAAX,CAAwB,KAAxB,CAAzB,CAEA,cAAeU,CAAAA,OAAO,CAAC,kBAAGC,CAAAA,IAAH,MAAGA,IAAH,oBAASC,QAAT,CAASA,QAAT,wBAAoB,KAApB,eAA2BC,MAA3B,MAA2BA,MAA3B,CAAmCC,SAAnC,MAAmCA,SAAnC,OACrB,qBAAC,SAAD,kBACMlB,YADN,EAEE,KAAK,CAAEC,QAFT,CAGE,IAAI,CAAEc,IAAI,CAACI,IAAL,EAHR,CAIE,QAAQ,CAAEH,QAJZ,GAMG,mBAAGI,CAAAA,SAAH,OAAGA,SAAH,CAAcd,KAAd,OAAcA,KAAd,CAAqBe,MAArB,OAAqBA,MAArB,CAA6BC,YAA7B,OAA6BA,YAA7B,CAA2CC,aAA3C,OAA2CA,aAA3C,OACC,4BAAK,SAAS,CAAEH,SAAhB,CAA2B,KAAK,CAAEf,MAAM,CAACC,KAAD,CAAxC,EACE,oBAAC,eAAD,EAAiB,IAAI,CAAES,IAAI,CAACI,IAAL,EAAvB,CAAoC,MAAM,CAAE,wBAAMD,CAAAA,SAAS,CAAC,IAAD,CAAf,EAA5C,EACE,8BAAQ,KAAK,CAAET,YAAf,EACE,oBAAC,MAAD,EAAQ,IAAI,CAAEQ,MAAM,CAAG,SAAH,CAAe,MAAnC,EADF,CADF,CADF,CAOGI,MAAM,CAACG,GAAP,CAAW,SAACC,IAAD,CAAOC,CAAP,QACV,2BAASJ,YAAY,CAAC,CAAEG,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAED,CAAb,CAAD,CAArB,CACGD,IAAI,CAACD,GAAL,CAAS,SAACI,KAAD,CAAQD,GAAR,QACR,4BAAUJ,aAAa,CAAC,CAAEK,KAAK,CAALA,KAAF,CAASD,GAAG,CAAHA,GAAT,CAAD,CAAvB,CADQ,EAAT,CADH,CADU,EAAX,CAPH,CADD,EANH,CADqB,EAAD,CAAtB","sourcesContent":["import React from 'react'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport nightOwl from 'prism-react-renderer/themes/nightOwl'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { FaCopy } from 'react-icons/fa'\nimport { withState } from 'recompose'\n\nconst styles = style => ({\n  ...style,\n  padding: 20,\n  position: 'relative'\n})\n\nconst buttonStyles = {\n  border: 0,\n  padding: 0,\n  background: 'transparent',\n  position: 'absolute',\n  right: 20,\n  cursor: 'pointer'\n}\n\nconst enhance = withState('copied', 'setCopied', false)\n\nexport default enhance(({ code, language = 'jsx', copied, setCopied }) => (\n  <Highlight\n    {...defaultProps}\n    theme={nightOwl}\n    code={code.trim()}\n    language={language}\n  >\n    {({ className, style, tokens, getLineProps, getTokenProps }) => (\n      <pre className={className} style={styles(style)}>\n        <CopyToClipboard text={code.trim()} onCopy={() => setCopied(true)}>\n          <button style={buttonStyles}>\n            <FaCopy fill={copied ? '#72e872' : '#fff'} />\n          </button>\n        </CopyToClipboard>\n\n        {tokens.map((line, i) => (\n          <div {...getLineProps({ line, key: i })}>\n            {line.map((token, key) => (\n              <span {...getTokenProps({ token, key })} />\n            ))}\n          </div>\n        ))}\n      </pre>\n    )}\n  </Highlight>\n))\n"]}]}